Object.defineProperty(exports, "__esModule", { value: true });
exports.loadDefaultBabelTransformer = exports.getSentryDefaultBabelTransformerPathEnv = exports.setSentryDefaultBabelTransformerPathEnv = exports.SENTRY_DEFAULT_BABEL_TRANSFORMER_PATH = void 0;
const utils_1 = require("@sentry/utils");
const process = require("process");
exports.SENTRY_DEFAULT_BABEL_TRANSFORMER_PATH = 'SENTRY_DEFAULT_BABEL_TRANSFORMER_PATH';
/**
 * Sets default Babel transformer path to the environment variables.
 */
function setSentryDefaultBabelTransformerPathEnv(defaultBabelTransformerPath) {
    process.env[exports.SENTRY_DEFAULT_BABEL_TRANSFORMER_PATH] = defaultBabelTransformerPath;
    utils_1.logger.debug(`Saved default Babel transformer path ${defaultBabelTransformerPath}`);
}
exports.setSentryDefaultBabelTransformerPathEnv = setSentryDefaultBabelTransformerPathEnv;
/**
 * Reads default Babel transformer path from the environment variables.
 */
function getSentryDefaultBabelTransformerPathEnv() {
    return process.env[exports.SENTRY_DEFAULT_BABEL_TRANSFORMER_PATH];
}
exports.getSentryDefaultBabelTransformerPathEnv = getSentryDefaultBabelTransformerPathEnv;
/**
 * Loads default Babel transformer from `@react-native/metro-config` -> `@react-native/metro-babel-transformer`.
 */
function loadDefaultBabelTransformer() {
    const defaultBabelTransformerPath = getSentryDefaultBabelTransformerPathEnv();
    if (!defaultBabelTransformerPath) {
        throw new Error(`Default Babel transformer path environment variable ${exports.SENTRY_DEFAULT_BABEL_TRANSFORMER_PATH} is not set.`);
    }
    utils_1.logger.debug(`Loading default Babel transformer from ${defaultBabelTransformerPath}`);
    // eslint-disable-next-line @typescript-eslint/no-var-requires
    return require(defaultBabelTransformerPath);
}
exports.loadDefaultBabelTransformer = loadDefaultBabelTransformer;
//# sourceMappingURL=sentryBabelTransformerUtils.js.map