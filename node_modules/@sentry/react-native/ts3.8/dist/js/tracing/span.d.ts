import type { Client, Scope, Span, StartSpanOptions } from '@sentry/types';
export declare const DEFAULT_NAVIGATION_SPAN_NAME = "Route Change";
export declare const defaultIdleOptions: {
    /**
     * The time that has to pass without any span being created.
     * If this time is exceeded, the idle span will finish.
     *
     * @default 1_000 (ms)
     */
    finalTimeout: number;
    /**
     * The max. time an idle span may run.
     * If this time is exceeded, the idle span will finish no matter what.
     *
     * @default 60_0000 (ms)
     */
    idleTimeout: number;
};
export declare const startIdleNavigationSpan: (startSpanOption: StartSpanOptions, { finalTimeout, idleTimeout, }?: Partial<typeof defaultIdleOptions>) => Span | undefined;
/**
 * Starts an idle span from `@sentry/core` with React Native application
 * context awareness.
 *
 * - Span will be started with new propagation context.
 * - Span will be canceled if the app goes to background.
 */
export declare const startIdleSpan: (startSpanOption: StartSpanOptions, { finalTimeout, idleTimeout }: {
    finalTimeout: number | undefined;
    idleTimeout: number | undefined;
}) => Span;
/**
 * Returns the default options for the idle navigation span.
 */
export declare function getDefaultIdleNavigationSpanOptions(): StartSpanOptions;
/**
 * Checks if the span is a Sentry User Interaction span.
 */
export declare function isSentryInteractionSpan(span: Span): boolean;
declare const SCOPE_SPAN_FIELD = "_sentrySpan";
type ScopeWithMaybeSpan = Scope & {
    [SCOPE_SPAN_FIELD]?: Span;
};
/**
 * Removes the active span from the scope.
 */
export declare function clearActiveSpanFromScope(scope: ScopeWithMaybeSpan): void;
/**
 * Ensures that all created spans have an operation name.
 */
export declare function addDefaultOpForSpanFrom(client: Client): void;
export {};
//# sourceMappingURL=span.d.ts.map
